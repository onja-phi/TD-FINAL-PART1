openapi: 3.0.3
info:
  title: Football Match Management API
  version: "1.0.0"
  description: API for managing football matches, competitions, teams and players

servers:
  - url: https://localhost.std23035.com

paths:
  /competitions:
    get:
      summary: List all competitions
      parameters:
        - name: page
          in: query
          required: true
          schema:
            type: integer
        - name: pageSize
          in: query
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Paged list of competitions
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/Competition'
                  totalItems:
                    type: integer
                  totalPages:
                    type: integer
                  currentPage:
                    type: integer

    post:
      summary: Create a new competition
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewCompetition'
      responses:
        '201':
          description: Created competition
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Competition'

  /teams/{teamId}:
    get:
      summary: Get details of a team
      parameters:
        - name: teamId
          in: path
          schema:
            type: string
          required: true
        - name: page
          in: query
          required: true
          schema:
            type: integer
        - name: pageSize
          in: query
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Team details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Team'

    put:
      summary: Update a team
      parameters:
        - name: teamId
          in: path
          schema:
            type: string
          required: true
        - name: page
          in: query
          required: true
          schema:
            type: integer
        - name: pageSize
          in: query
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Team'
      responses:
        '200':
          description: Updated team
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Team'

  /teams/{teamId}/competitions:
    get:
      summary: List competitions for a team
      parameters:
        - name: teamId
          in: path
          schema:
            type: string
          required: true
        - name: page
          in: query
          required: true
          schema:
            type: integer
        - name: pageSize
          in: query
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Paged list of competitions for the team
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/Competition'
                  totalItems:
                    type: integer
                  totalPages:
                    type: integer
                  currentPage:
                    type: integer

  /teams/{teamId}/players:
    get:
      summary: List players for a team
      parameters:
        - name: teamId
          in: path
          schema:
            type: string
          required: true
        - name: playerName
          in: query
          schema:
            type: string
          description: Filter players by name
        - name: page
          in: query
          required: true
          schema:
            type: integer
        - name: pageSize
          in: query
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Paged list of players for the team
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/Player'
                  totalItems:
                    type: integer
                  totalPages:
                    type: integer
                  currentPage:
                    type: integer

    post:
      summary: Add player to a team
      parameters:
        - name: teamId
          in: path
          schema:
            type: string
          required: true
        - name: page
          in: query
          required: true
          schema:
            type: integer
        - name: pageSize
          in: query
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/NewPlayer'
      responses:
        '201':
          description: Added players
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Player'

  /players:
    get:
      summary: List all players
      parameters:
        - name: playerName
          in: query
          schema:
            type: string
          description: Filter players by name
        - name: page
          in: query
          required: true
          schema:
            type: integer
        - name: pageSize
          in: query
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Paged list of players
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/Player'
                  totalItems:
                    type: integer
                  totalPages:
                    type: integer
                  currentPage:
                    type: integer

    post:
      summary: Create a new player
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewPlayer'
      responses:
        '201':
          description: Created player
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Player'

components:
  schemas:
    Competition:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        country:
          type: string

    NewCompetition:
      type: object
      properties:
        name:
          type: string
        country:
          type: string

    Team:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        slogan:
          type: string
        competitions:
          type: array
          items:
            $ref: '#/components/schemas/Competition'
        players:
          type: array
          items:
            $ref: '#/components/schemas/Player'

    NewTeam:
      type: object
      properties:
        name:
          type: string
        slogan:
          type: string

    Player:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        number:
          type: integer
        dominantFoot:
          type: string
          enum:
            - LEFT
            - RIGHT

    NewPlayer:
      type: object
      properties:
        name:
          type: string
        number:
          type: integer
        dominantFoot:
          type: string
          enum:
            - LEFT
            - RIGHT
